<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbOAuth.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAIAAAAlC+aJAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxAAAAsQAa0jvXUAABAxSURBVGhD7dp5tNXjGgfwY57n
        eZ7neZ4yz2MZIpQMoRVRIkRCyFjJFJIGQ0gyZiWJIpJVGgxxSkKmSkohnPs5+/nd39lnT51T3bvWXet+
        /zjr2b/9vu/vGb7P8O4qq/gfx/8NqI5//vnnhx9+GD169KBBg/r27du7d+9evXr16dNnwIABI0aM+Prr
        r//8889k6SLCIjDgr7/+ovF999132mmnbb755ksssURZcWywwQbHH3/8XXfdNXLkyL///js5YiGwUAaM
        HTu2TZs2W221VSi32WabnXPOOSwZOHAgk8rLy7/55ptvv/12ypQpn3/++dChQx999NHGjRszMtZvvfXW
        N91005dffpkct0BYQAPwoX79+qHHHnvs8eCDD06cOHHWrFn+vv766507d27RokWDBg3q1at38sknN2rU
        6Nprr33sscfsmjNnju0Me+ihh/bcc8844bzzzhs/fnycXFvU2gA8btKkSbyYZqNGjZo5cyaXX3TRRTxa
        mj+wwgorHH744V26dJk8ebLTxowZ07Bhw/jqqquumjFjRryl5qidAd26dVtttdW87NRTT/3000+nTp16
        yy23YE5okI111lkHyzfZZJMjjzxyyJAhSy65pIfM22WXXWIBHHLIIVJcTD777LMTTzzRky222OKNN95I
        XlYz1NSAn3766fTTT/cOOiHJr7/+2r59+zAG1lxzTVo2a9YsPsLGG2+MUZtuuikKsXOppZbykPvfeuut
        CRMmPPnkkwceeGC6UtrMnTu3X79+q6++uie333578tYaoEYGfPzxx9tss42jkZVaCJMmbgCb1cdp06ap
        MPFko402ohOPnnHGGRifUmv77bf//fffe/bsmTInIDLDhg1Tgo866igfsXTevHnJ60ti/ga8/fbbq666
        6uKLL969e3dlvlWrVvHKbBxzzDEYZaX1BxxwgCdc/s4773D2d999J8VjGbRs2VJFSj5kQNdLLrkk5Btv
        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
        RU5ErkJggg==
</value>
  </data>
</root>